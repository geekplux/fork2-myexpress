// Generated by CoffeeScript 1.7.1
(function() {
  var createInjector, getParameters;

  getParameters = function(fn) {
    var FN_ARG, FN_ARGS, FN_ARG_SPLIT, STRIP_COMMENTS, argDecl, fnText, names;
    fnText = fn.toString();
    if (getParameters.cache[fnText]) {
      getParameters.cache[fnText];
    }
    FN_ARGS = /^function\s*[^\(]*\(\s*([^\)]*)\)/m;
    FN_ARG_SPLIT = /,/;
    FN_ARG = /^\s*(_?)(\S+?)\1\s*$/;
    STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/g;
    names = [];
    argDecl = fnText.replace(STRIP_COMMENTS, "").match(FN_ARGS);
    argDecl[1].split(FN_ARG_SPLIT).forEach(function(arg) {
      arg.replace(FN_ARG, function(all, underscore, name) {
        names.push(name);
      });
    });
    getParameters.cache[fn] = names;
    return names;
  };

  getParameters.cache = {};

  createInjector = function(handler, app) {
    var injector;
    injector = function(req, res, next) {
      injector.invoke(req, res, next);
    };
    injector.invoke = function(req, res, next) {
      var loader;
      loader = this.dependencies_loader(req, res, next);
      return loader(function(err, values) {
        if (err) {
          next(err);
        } else {
          handler.apply(null, values);
        }
      });
    };
    injector.extract_params = function() {
      return getParameters(handler);
    };
    injector.dependencies_loader = function(req, res, done) {
      var index, params;
      params = this.extract_params();
      index = 0;
      return function(func) {
        var next, values;
        next = function() {
          var dependency, e, factory;
          dependency = params[index];
          index++;
          if (dependency === "req") {
            values.push(req);
            next();
            return;
          }
          if (dependency === "res") {
            values.push(res);
            next();
            return;
          }
          if (dependency === "next") {
            values.push(done);
            next();
            return;
          }
          if (dependency) {
            factory = app._factories[dependency];
            if (!factory) {
              func(new Error("Factory not defined: " + dependency));
              return;
            }
            try {
              factory(req, res, function(err, value) {
                if (err) {
                  func(err);
                  return;
                }
                values.push(value);
                next();
              });
            } catch (_error) {
              e = _error;
              func(e);
            }
          } else {
            func(null, values);
          }
        };
        values = [];
        next();
      };
    };
    return injector;
  };

  module.exports = createInjector;

}).call(this);
